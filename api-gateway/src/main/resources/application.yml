server:
  port: 8080
spring:
  application:
    name: api-gateway-service

  redis:
    host: localhost
    port: 6379

  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      routes:
        # user microservice - NO rate limiting for auth endpoints
        - id: user-service
          uri: http://localhost:8081
          predicates:
            - Path=/auth/**

        # Transaction microservice - WITH rate limiting
        - id: transaction-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/transactions/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1

        # Reward Service - WITH rate limiting
        - id: reward-service
          uri: http://localhost:8085
          predicates:
            - Path=/api/rewards/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1

        # Notification Service - WITH rate limiting
        - id: notification-service
          uri: http://localhost:8084
          predicates:
            - Path=/api/notifications/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1

    httpclient:
      max-initial-line-length: 4096
      max-header-size: 8192
    filters:
      - name: RequestSize
        args:
          maxSize: 1MB